plugins {
    id 'checkstyle'
    id "com.github.kt3k.coveralls" version "2.4.0x"
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }
}

subprojects {
    test {
        testLogging {
            exceptionFormat = 'full'
            showStandardStreams = true
        }
    }

    sourceCompatibility = JavaVersion.VERSION_1_8

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    [compileGroovy, compileTestGroovy]*.options*.encoding = 'UTF-8'

    dependencies {
        testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    }

    jacocoTestReport {
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)
        reports {
            html.enabled = false
            xml.enabled = true
            csv.enabled = false
        }
    }
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.test
    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output.classesDir)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = false
        xml.enabled = true
        csv.enabled = false

        xml.destination = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
    onlyIf = {
        true
    }
    doFirst {
        executionData = files(executionData.findAll {
            it.exists()
        })
    }
}

//coveralls.jacocoReportPath = 'build/reports/coverage/jodd-coverage.xml'
coveralls.sourceDirs = ['spring-boot-unicore-starter/src/main/java']

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
